<?php

/**
* Perform the webserver-based user authentication 
* 
* Log the user in if it's account already exists or create a new one with the given datas
*/
function shib_auth_init() {
  global $user, $account;
  
  if ($user->uid) {
    //do nothing because user is already logged into Drupal
  }
  else {
    if ($name = $_SERVER["REMOTE_USER"]) {
      // modules get to change the user bits before saving. use a global $account to do so.
      // only loaded modules will see this hook
      module_invoke_all("shib_auth");
      // if we are in bootstrap, load user.module ourselves
      if (!module_exists('user')) {
       drupal_load('module', 'user');
      }
      $account = isset($account->name) ? $account : array('name' => $name);
      $userinfo = user_load($account);
	  if (!isset($userinfo->uid)) {
		// Register this new user.
        $shib_mail = $_SERVER["HTTP_SHIB_MAIL"];
		$userinfo = array('name' => $name, 'pass' => user_password(17), 'init' => $name, "mail" => $shib_mail, 'status' => 1);
		$user = user_save($account, $userinfo);
		// watchdog("user", "new user: $user->name.", WATCHDOG_NOTICE);
	  } else $user = $userinfo;
    }
  }
}

function generate_login_text() {
        $block_content = '';
        global $base_url;

        $myServer = 'https://' . $_SERVER['HTTP_HOST'];
        $SessionInitiator = $myServer . variable_get('shib_auth_wayf_uri', '"/Shibboleth.sso/WAYF/NIIF-WAYF"');
        $siteBaseURL = $base_url;
        //$myUrl = (isset($_SERVER['HTTPS']) ? 'https' : 'http') . '://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
        $myUrl = 'https://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
        $myLogoutUrl = $siteBaseURL . '/?q=logout';
        //$myUrl: ahova vissza kell majd juttatnia a Shibboleth-nek

        if (!$_SERVER['HTTP_SHIB_IDENTITY_PROVIDER'])
        // igy dontjuk el, hogy van-e session
        {
          $block_content .= "<p><b><a href=\"$SessionInitiator?target=$myUrl\">" . t('Click here to login via Shibboleth!') .
                            "</a></b></p>";
        }
        else
        {
          $LogoutUrl = $myServer . "/Shibboleth.sso/Logout";
          $block_content .= "<p><a href=\"$LogoutUrl?return=$myLogoutUrl\">" .t('Click here to logout from this Service Provider').
                "</a></p>";
        }
        
        return $block_content;
}

/**
* Implementation of hook_help()
*/
function shib_auth_help($section) {
  switch($section) {
    case 'admin/help#shib_auth':
      return "TODO";
    case 'admin/user/shib_auth':
      return "What can you do here?";
    case 'user':
    case 'user/login':
      return generate_login_text();
  }
}

function shib_auth_admin() {
  $form['shib_auth_wayf_uri'] = array(
    '#type' => 'textfield',
    '#title' => t('The WAYFs location on the server'),
    '#default_value' => variable_get('shib_auth_wayf_uri', ''),
    '#description' => t('par example: <i>/Shibboleth.sso/WAYF/NIIF-WAYF</i>'),
  );
  return system_settings_form($form);
}

/**
* Implementation of hook_menu()
*/
function shib_auth_menu($may_cache) {
  $items = array();
  $items[] = array(
    'path' => 'admin/user/shib_auth',
    'title' => t('Shibboleth authentication module settings'),
    'description' => t('Control the various settings of the shibboleth authentication module'),
    'callback' => 'drupal_get_form',
    'callback arguments' => 'shib_auth_admin',
    'access' => user_access('administer shibboleth authentication'),
    'type' => MENU_NORMAL_ITEM,
   );
  return $items;
}

/**
* Impelementation of hook_perm()
*/
function shib_auth_perm() {
  return array('administer shibboleth authentication');
}


/**
* Implementation of hook_block()
*/
function shib_auth_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    $blocks[0] = array('info' => t('Shibboleth authentication'),
      'weight' => 0, 'status' => 1, 'region' => 'left');
    return $blocks;
  } else if ($op == 'view') {
    switch($delta) {
      case 0:
        $block = array('subject' => t('Shibboleth login'),
          'content' => generate_login_text() );
        break;
    }
    return $block;
  }
}
/**
* Implementation of hook_form_alter()
*/
//function shib_auth_form_alter($form_id, &$form) {
//  if ($form_id == 'user_login') {
//  }
//}
?>

