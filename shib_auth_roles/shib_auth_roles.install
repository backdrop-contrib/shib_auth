<?php
// $Id: shib_auth.install,v 1.3.4.2.2.17 2009/10/20 11:25:33 dorion Exp $
/**
 * @file
 * This is the install file of the Shibboleth role assignment module for Drupal system
 *
 */

/**
 * Implementation of hook_install().
 *
 * Hook to install module
 */
function shib_auth_roles_install() {
  drupal_install_schema('shib_auth_roles');
  drupal_set_message(t('Shibboleth role assignment module installed successfully.'));
}

/**
 * Implementation of hook_uninstall().
 *
 * Hook to uninstall module
 */
function shib_auth_roles_uninstall() {
  drupal_uninstall_schema('shib_auth_roles');
  drupal_set_message(t('Shibboleth role assignment module uninstalled successfully.'));
}

function shib_auth_roles_update_6041() {
  $ret = array();
  $schema = shib_auth_schema();
  $tables = array('shib_auth', 'shib_authmap');
  // make sure these tables exist
  foreach ($tables AS $table) {
    if (!db_table_exists($table)) {
      db_create_table($ret, $table, $schema[$table]);
    }
  }
  // update shib elements to 
  $entries = db_query("SELECT * FROM {shib_auth}");
  while ($entry = db_fetch_array($entries)) {
    $old_role = unserialize(urldecode($entry['role']));
    if ($old_role) {
      $new_role = serialize(array_keys($old_role));
      $ret[] = db_query("UPDATE {shib_auth} SET role='%s' WHERE id=%d",$new_role,$entry['id']);
    }
  }
  return $ret;
}
/**
 * Implements hook_schema().
 *
 * This is how the schema of the module will look like
 */
function shib_auth_roles_schema() {
   $schema['shib_auth'] = array(
    'description' => t('Stores shibboleth authentication rules'),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => t("The id of the Shibboleth role assignment rule"),
      ),
      'field' => array(
        'type' => 'varchar',
        'length' => 128,
        'default' => '',
        'description' => t("The observed server variable."),
      ),
      'regexpression' => array(
        'type' => 'varchar',
        'length' => 128,
        'default' => '',
        'description' => t("The joint regular expression."),
      ),
      'role' => array(
        'type' => 'varchar',
        'length' => 128,
        'default' => '',
        'description' => t("The assigned role."),
      ),
      'sticky' => array(
        'type' => 'int',
        'length' => 1,
        'default' => 0,
        'description' => t("Sticky status"),
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

